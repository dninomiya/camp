rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isSignIn() {
      return request.auth.uid != null;
    }

    function getUser() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    }

    function isAdmin() {
      return getUser().admin == true
    }

    function isOwner(id) {
      return request.auth.uid == id;
    }

    function safeKey(key) {
      return request.resource.data[key] == resource.data[key];
    }

    function safeId() {
      return request.resource.data.id == resource.data.id;
    }

    function isUndefined(data, field) {
      return !data.keys().hasAll([field]);
    }

    match /users/{uid} {
      allow read: if true;
      allow write: if safeId();
      match /{document=**} {
        allow read, write: if isOwner(uid) || isAdmin();
      }
    }

    match /sections/{uid} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /core/{id} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /products/{doc} {
      allow read: if request.auth.uid != null;
      allow write: if request.auth.uid == doc;
    }

    match /customers/{uid} {
      allow read: if request.auth.uid == uid;

      match /checkout_sessions/{id} {
        allow read, write: if request.auth.uid == uid;
      }
      match /subscriptions/{id} {
        allow read: if request.auth.uid == uid;
      }
    }

    match /stripeProducts/{id} {
      allow read: if true;

      match /prices/{id} {
        allow read: if true;
      }

      match /tax_rates/{id} {
        allow read: if true;
      }
    }

    match /channels/{channelId} {
      allow read: if true;
      allow update: if safeKey('id') && isOwner(channelId) && isOwner(resource.data.authorId);
      match /likes/{lessonId} {
        allow read, write: if isOwner(channelId)
      }
    }
    match /lessons/{lessonId} {
      allow read: if resource.data.public == true || isOwner(resource.data.authorId);
      allow create: if isSignIn();
      allow update: if isAdmin() || (isOwner(resource.data.authorId) && safeId() && safeKey('authorId'));
      match /body/content {
        allow read: if get(/databases/$(database)/documents/lessons/$(lessonId)).data.free == true || (isSignIn() && !(isUndefined(getUser(), 'plan')) && getUser().plan != 'free' || (isSignIn() && !(isUndefined(getUser(), 'ticket')) && getUser().ticket.document == true));
        allow create: if isSignIn();
        allow update: if isAdmin() || (isOwner(get(/databases/$(database)/documents/lessons/$(lessonId)).data.authorId));
      }
    }
    match /lists/{listId} {
      allow read: if true;
      allow create: if isSignIn();
      allow update: if isSignIn() && safeId();
      allow delete: if isOwner(resource.data.authorId);
    }
  }
}
